
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { useTranslation } from '@/hooks/useTranslation';
import { toast } from 'sonner';
import { QrCode, Smartphone } from 'lucide-react';

interface MFASetupProps {
  onClose: () => void;
}

const MFASetup: React.FC<MFASetupProps> = ({ onClose }) => {
  const { language } = useTranslation();
  const [activeTab, setActiveTab] = useState<string>('app');
  const [verificationCode, setVerificationCode] = useState<string>('');
  const [isLoading, setIsLoading] = useState<boolean>(false);
  
  const handleEnableMFA = () => {
    if (!verificationCode || verificationCode.length < 6) {
      toast.error(
        language === 'pt' 
          ? 'Por favor, insira um código de verificação válido' 
          : 'Please enter a valid verification code'
      );
      return;
    }
    
    setIsLoading(true);
    setTimeout(() => {
      setIsLoading(false);
      toast.success(
        language === 'pt' 
          ? 'Autenticação de dois fatores ativada com sucesso' 
          : 'Two-factor authentication successfully enabled'
      );
      onClose();
    }, 1500);
  };
  
  return (
    <Card className="w-full max-w-md mx-auto">
      <CardHeader>
        <CardTitle>
          {language === 'pt' ? 'Configurar Autenticação de Dois Fatores' : 'Set Up Two-Factor Authentication'}
        </CardTitle>
        <CardDescription>
          {language === 'pt' 
            ? 'Adicione uma camada extra de segurança à sua conta' 
            : 'Add an extra layer of security to your account'}
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Tabs value={activeTab} onValueChange={setActiveTab}>
          <TabsList className="grid w-full grid-cols-2">
            <TabsTrigger value="app">
              {language === 'pt' ? 'Aplicativo' : 'App'}
            </TabsTrigger>
            <TabsTrigger value="sms">SMS</TabsTrigger>
          </TabsList>
          
          <TabsContent value="app" className="space-y-4">
            <div className="rounded-lg border p-4 flex flex-col items-center space-y-3 mt-4">
              <QrCode className="w-12 h-12 text-primary mb-2" />
              <div className="h-48 w-48 bg-gray-100 dark:bg-gray-800 flex items-center justify-center">
                <span className="text-sm text-muted-foreground">QR Code Example</span>
              </div>
              <p className="text-sm text-muted-foreground text-center">
                {language === 'pt' 
                  ? 'Escaneie este código QR com o seu aplicativo de autenticação' 
                  : 'Scan this QR code with your authenticator app'}
              </p>
            </div>
          </TabsContent>
          
          <TabsContent value="sms" className="space-y-4">
            <div className="rounded-lg border p-4 flex flex-col items-center space-y-3 mt-4">
              <Smartphone className="w-12 h-12 text-primary mb-2" />
              <p className="text-sm text-muted-foreground text-center">
                {language === 'pt' 
                  ? 'Enviaremos um código de verificação para o seu telefone cada vez que você fizer login' 
                  : 'We will send a verification code to your phone each time you log in'}
              </p>
              <div className="w-full">
                <Label htmlFor="phone" className="text-left">
                  {language === 'pt' ? 'Número de telefone' : 'Phone number'}
                </Label>
                <Input 
                  id="phone" 
                  placeholder="+55 (11) 98765-4321" 
                  className="mt-1"
                />
              </div>
            </div>
          </TabsContent>
        </Tabs>
        
        <div className="mt-6 space-y-4">
          <div>
            <Label htmlFor="verification-code">
              {language === 'pt' ? 'Código de verificação' : 'Verification code'}
            </Label>
            <Input 
              id="verification-code" 
              placeholder="123456" 
              value={verificationCode}
              onChange={(e) => setVerificationCode(e.target.value)}
              className="mt-1"
            />
            <p className="text-xs text-muted-foreground mt-1">
              {language === 'pt' 
                ? 'Insira o código gerado pelo seu aplicativo de autenticação' 
                : 'Enter the code generated by your authenticator app'}
            </p>
          </div>
        </div>
      </CardContent>
      
      <CardFooter className="flex justify-between border-t pt-6">
        <Button variant="outline" onClick={onClose}>
          {language === 'pt' ? 'Cancelar' : 'Cancel'}
        </Button>
        <Button onClick={handleEnableMFA} disabled={isLoading}>
          {isLoading 
            ? (language === 'pt' ? 'Ativando...' : 'Enabling...') 
            : (language === 'pt' ? 'Ativar 2FA' : 'Enable 2FA')}
        </Button>
      </CardFooter>
    </Card>
  );
};

export default MFASetup;
